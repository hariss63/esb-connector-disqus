<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<template name="listThreads" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="categoryId"
               description="ID of the category whose Threads should be retrieved."/>
    <parameter name="forumId" description="ID of the Disqus Forum to retrieve."/>
    <parameter name="threadId" description="ID of the Thread to retrieve."/>
    <parameter name="since" description="Unix timestamp (or ISO datetime standard)"/>
    <parameter name="related"
               description="Specify relations to include with your response. Choices - forum, author"/>
    <parameter name="cursor" description="Pagnination parameter."/>
    <parameter name="limit" description="Maximum number of posts to return."/>
    <parameter name="include" description="Choices: open, closed, killed"/>
    <parameter name="order" description="Order of entries returned. Choices: asc, desc(default)"/>
    <sequence>
        <property name="uri.var.categoryId" expression="$func:categoryId"/>
        <property name="uri.var.forumId" expression="$func:forumId"/>
        <property name="uri.var.threadId" expression="$func:threadId"/>
        <property name="uri.var.since" expression="$func:since"/>
        <property name="uri.var.related" expression="$func:related"/>
        <property name="uri.var.cursor" expression="$func:cursor"/>
        <property name="uri.var.limit" expression="$func:limit"/>
        <property name="uri.var.include" expression="$func:include"/>
        <property name="uri.var.order" expression="$func:order"/>
        <script language="js">
            <![CDATA[
                var categoryId = mc.getProperty('uri.var.categoryId');
                var cursor = mc.getProperty('uri.var.cursor');
                var forumId = mc.getProperty('uri.var.forumId');
                var include = mc.getProperty('uri.var.include');
                var limit = mc.getProperty('uri.var.limit');
                var order = mc.getProperty('uri.var.order');
                var related = mc.getProperty('uri.var.related');
                var since = mc.getProperty('uri.var.since');
                var threadId = mc.getProperty('uri.var.threadId');
                var apiKey = mc.getProperty('uri.var.apiKey');   
				var apiSecret = mc.getProperty('uri.var.apiSecret');  
                var accessToken = mc.getProperty('uri.var.accessToken');           
                var urlQuery = '';
				// Optional Query Parameters
				if (apiKey != null && apiKey != ""){
                    urlQuery += 'api_key=' + apiKey + '&';
                }
				if (apiSecret != null && apiSecret != ""){
                    urlQuery += 'api_secret=' + apiSecret + '&';
                }
				if (accessToken != null && accessToken != ""){
                    urlQuery += 'access_token=' + accessToken + '&';
                }
                if (cursor != null && cursor != ""){
                    urlQuery += 'cursor=' + cursor + '&';
                }
                if (since != null && since != ""){
                    urlQuery += 'since=' + since + '&';
                }
                if (categoryId != null && categoryId != ""){
                    urlQuery += 'category=' + categoryId + '&';
                }
                if (limit != null && limit != ""){
                    urlQuery += 'limit=' + limit + '&';
                }
                if (order != null && order != ""){
                    urlQuery += 'order=' + order + '&';
                }
                // Multi valued.
                if (threadId != null && threadId != ""){
					// If mulitple items are sent.
					if(threadId.indexOf(',') != -1){
						var threadIdItems = threadId.split(',');
						for(var i=0; i<threadIdItems.length; i++){
							if(threadIdItems[i] != ""){
								urlQuery += 'thread=' + threadIdItems[i] + '&';
							}
						}
					} else {
						urlQuery += 'thread=' + threadId + '&';
					}
                }
                if (forumId != null && forumId != ""){
					// If mulitple items are sent.
					if(forumId.indexOf(',') != -1){
						var forumIdItems = forumId.split(',');
						for(var i=0; i<forumIdItems.length; i++){
							if(forumIdItems[i] != ""){
								urlQuery += 'forum=' + forumIdItems[i] + '&';
							}
						}
					} else {
						urlQuery += 'forum=' + forumId + '&';
					}
                }
                if (include != null && include != ""){
					// If mulitple items are sent.
					if(include.indexOf(',') != -1){
						var includeItems = include.split(',');
						for(var i=0; i<includeItems.length; i++){
							if(includeItems[i] != ""){
								urlQuery += 'include=' + includeItems[i] + '&';
							}
						}
					} else {
						urlQuery += 'include=' + include + '&';
					}
                }
                if (related != null && related != ""){
					// If mulitple items are sent.
					if(related.indexOf(',') != -1){
						var relatedItems = related.split(',');
						for(var i=0; i<relatedItems.length; i++){
							if(relatedItems[i] != ""){
								urlQuery += 'related=' + relatedItems[i] + '&';
							}
						}
					} else {
						urlQuery += 'related=' + related + '&';
					}
                }
                // Prefix the urlQuery with '?' and remove the trailing '&'
                urlQuery = '?' + urlQuery.toString().substring(0, urlQuery.toString().lastIndexOf("&"));
				mc.setProperty('uri.var.urlQuery', urlQuery);
				// Choose the endpoint based on the given input. Precedence: category, forum, trend.
				if(categoryId != null && categoryId != "") {
					// Set for categories endpoint
					mc.setProperty('uri.var.group', 'categories'); 
				} else if(forumId != null && forumId != "") {
					// Set for forums endpoint
					mc.setProperty('uri.var.group', 'forums'); 
				} else {
					// Set for trends endpoint
					mc.setProperty('uri.var.group', 'trends'); 
				}
            ]]>
        </script>
        <call>
            <endpoint>
                <http method="get"
                      uri-template="{+uri.var.apiUrl}/{+uri.var.group}/listThreads.json{+uri.var.urlQuery}"/>
            </endpoint>
        </call>
        <!-- Remove custom Headers from the API Response -->
        <header name="X-Ratelimit-Remaining" action="remove" scope="transport"/>
        <header name="X-User" action="remove" scope="transport"/>
        <header name="X-Ratelimit-Limit" action="remove" scope="transport"/>
        <header name="X-Frame-Options" action="remove" scope="transport"/>
        <header name="p3p" action="remove" scope="transport"/>
        <header name="X-Ratelimit-Reset" action="remove" scope="transport"/>
        <header name="X-Served-By" action="remove" scope="transport"/>
        <header name="X-Cache" action="remove" scope="transport"/>
        <header name="X-Cache-Hits" action="remove" scope="transport"/>
        <header name="X-Content-Type-Options" action="remove" scope="transport"/>
        <header name="X-XSS-Protection" action="remove" scope="transport"/>
        <header name="Via" action="remove" scope="transport"/>
        <header name="X-Varnish" action="remove" scope="transport"/>
    </sequence>
</template>
